// Code generated by templ - DO NOT EDIT.

// templ: version: v0.2.747
package main

//lint:file-ignore SA4006 This context is only used if a nested component is present.

import "github.com/a-h/templ"
import templruntime "github.com/a-h/templ/runtime"

func Chart(ts []int64, values []float64) templ.ComponentScript {
	return templ.ComponentScript{
		Name: `__templ_Chart_2bb5`,
		Function: `function __templ_Chart_2bb5(ts, values){// Data
const xData = ts;
const yData = values;
// Set up dimensions
const margin = {top: 20, right: 20, bottom: 40, left: 60};
const width = 600 - margin.left - margin.right;
const height = 400 - margin.top - margin.bottom;

// Create SVG
const svg = d3.select("#chart")
.append("svg")
.attr("width", width + margin.left + margin.right)
.attr("height", height + margin.top + margin.bottom)
.append("g")
.attr("transform", ` + "`" + `translate(${margin.left},${margin.top})` + "`" + `);

// Set up scales
const xScale = d3.scaleTime()
.domain(d3.extent(xData))
.range([0, width]);

const yScale = d3.scaleLinear()
.domain([0, d3.max(yData)])
.range([height, 0]);

// Create line generator
const line = d3.line()
.x((d, i) => xScale(xData[i]))
.y(d => yScale(d));

// Add X axis
svg.append("g")
.attr("transform", ` + "`" + `translate(0,${height})` + "`" + `)
.call(d3.axisBottom(xScale)
.ticks(5)
.tickFormat(d3.timeFormat("%H:%M:%S")))
.selectAll("text")
.attr("transform", "rotate(-45)")
.style("text-anchor", "end");

// Add Y axis with custom formatting
svg.append("g")
.call(d3.axisLeft(yScale)
.ticks(5)
.tickFormat(d => {
if (d < 1e3) return ` + "`" + `${d} ns` + "`" + `; // Nanoseconds 
if (d < 1e6) return ` + "`" + `${d / 1e3} Âµs` + "`" + `; // Microseconds 
return ` + "`" + `${d / 1e6}ms` + "`" + `; // Milliseconds 
})); 
// Add the line 
svg.append("path") .datum(yData) .attr("fill", "none" )
	.attr("stroke", "steelblue" ) .attr("stroke-width", 1.5) .attr("d", line); 
// Add dots 
svg.selectAll(".dot")
	.data(yData) .enter().append("circle") .attr("class", "dot" ) .attr("cx", (d, i)=> xScale(xData[i]))
	.attr("cy", d => yScale(d))
	.attr("r", 4)
	.attr("fill", "steelblue");
	}`,
		Call:       templ.SafeScript(`__templ_Chart_2bb5`, ts, values),
		CallInline: templ.SafeScriptInline(`__templ_Chart_2bb5`, ts, values),
	}
}

func Index(title string, ts []int64, values []float64) templ.Component {
	return templruntime.GeneratedTemplate(func(templ_7745c5c3_Input templruntime.GeneratedComponentInput) (templ_7745c5c3_Err error) {
		templ_7745c5c3_W, ctx := templ_7745c5c3_Input.Writer, templ_7745c5c3_Input.Context
		templ_7745c5c3_Buffer, templ_7745c5c3_IsBuffer := templruntime.GetBuffer(templ_7745c5c3_W)
		if !templ_7745c5c3_IsBuffer {
			defer func() {
				templ_7745c5c3_BufErr := templruntime.ReleaseBuffer(templ_7745c5c3_Buffer)
				if templ_7745c5c3_Err == nil {
					templ_7745c5c3_Err = templ_7745c5c3_BufErr
				}
			}()
		}
		ctx = templ.InitializeContext(ctx)
		templ_7745c5c3_Var1 := templ.GetChildren(ctx)
		if templ_7745c5c3_Var1 == nil {
			templ_7745c5c3_Var1 = templ.NopComponent
		}
		ctx = templ.ClearChildren(ctx)
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("<!doctype html><html><head><meta charset=\"UTF-8\"><meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"><script src=\"https://cdn.tailwindcss.com\"></script><script src=\"https://unpkg.com/htmx.org@2.0.1\"></script><script src=\"https://cdn.jsdelivr.net/npm/d3@7\"></script></head><body><h1>Hello, ")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		var templ_7745c5c3_Var2 string
		templ_7745c5c3_Var2, templ_7745c5c3_Err = templ.JoinStringErrs(title)
		if templ_7745c5c3_Err != nil {
			return templ.Error{Err: templ_7745c5c3_Err, FileName: `index.templ`, Line: 77, Col: 20}
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(templ.EscapeString(templ_7745c5c3_Var2))
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString("</h1><div id=\"chart\"></div><script src=\"https://cdn.jsdelivr.net/npm/d3@7\"></script>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		templ_7745c5c3_Err = Chart(ts, values).Render(ctx, templ_7745c5c3_Buffer)
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		_, templ_7745c5c3_Err = templ_7745c5c3_Buffer.WriteString(";</body></html>")
		if templ_7745c5c3_Err != nil {
			return templ_7745c5c3_Err
		}
		return templ_7745c5c3_Err
	})
}
